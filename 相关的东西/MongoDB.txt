MongoChef.dmg
mongochef-x64.msi
mongodb-win32-x86_64-2008plus-ssl.msi


NoSQL  非关系型数据库
随着访问量的上升，网站的数据库性能出现了问题，于是nosql被设计出来


优点：高扩展性，分布式计算，低成本，架构的灵活性，半结构化数据，没有复杂的关系

缺点：有限的查询功能，没有标准化(数据结构没有非常标准，字段规定不清晰)，最终一致是不直观的程序



NoSQL简介：
列存储：Hbase(大数据常用),Cassandra,Hypertable
顾名思义，按照列存储数据的，最大特点是方便存储结构化和半结构化数据，方便做数据压缩，对争对某一列或者某几列的查询有非常大的IO优势


文档存储：MongoDB ,CounchDB
文档存储一般用类似json的格式存储，存储的内容是文档型的。这样也就有机会对某些字段建立索引，实现关系数据库的某些功能

Key-value存储：Tokyo Cabinet/Tyrant, Berkeley DB , MemcacheDB, Redis
可以通过key快速查询到其value。一般来说，存储不管value的格式，照单全收。


图存储：Neo4J, FlockDB 
图形关系的最佳存储。使用传统关系数据库来解决的话性能低下，而且设计使用不方便


对象存储：db4o, versant
通过类似面向对象语言的语法操作数据库，通过对象的方式存取数据

xml数据库：Berkeley DB XML, BaseX
高效的存储XML数据，并支持XML的内部查询语法，比如XQuery,Xpath



MongoDB：
1.MongoDB是由C++语言编写的，是一个基于分布式文件存储的开源数据库系统。在高负载的情况下，添加多的节点，可以保证服务器性能。
2.MongoDB旨在为WEB应用提供可扩展的高性能数据存储解决方案。
3.MongoDB将数据存储为一个文档，数据结构由键值(key=>value)对组成。MongoDB文档类似于JSON对象(Bjson)。字段值可以包含其他文档，数组及文档数组。

特点：
1.MongoDB的提供了一个面向文档存储，基本的思路就是将原来"行"的概念换成更加灵活的“文档”模型。一条记录可以表示非常复杂的层次关系。
2.MongoDB支持丰富的查询表达式。查询指令使用JSON形式的标记，可轻易查询文档中内嵌的对象及数组。
3.非常容易扩展。面对数据量的不断上涨，通常有两种方案，一种是购买更好的硬件，另一种是分散数据，进行分布式的扩展，前者有着非常大的缺点，因为硬件通常是有物理极限的，当达到极限以后，处理能力就不可能再进行扩展了。所以建议的方式是使用集群进行扩展。MongoDB所采用的面向文档的数据模型使其可以自动在多台服务器之间分割数据。它还可以平衡集群的数据和负载，自动重排文档。
4.MongoDB支持各种编程语言：RUBY,PYTHON,JAVA,C++,PHP,C#等多种语言。
5.丰富的功能。包括索引，存储JavaScript,聚合，固定集合，文件存储等。
6.方便的管理，除了启动数据库服务器外，几乎没有什么必要的管理操作。管理集群只需要知道有新增加的节点，就会自动集成和配置新节点。


MongoDB SQL术语概念：
database    数据库
collection   数据库表/集合
document  数据记录行/文档
field           数据字段/域
index         索引
primary key 主键，MongoDB自动将_id字段设置为主键

MongoDB不支持表连接
一个mongodb中可以建立多个数据库
MongoDB的单个实例可以容纳多个独立的数据库，每一个都有自己的集合和权限，不同的数据库也放置在不同的文件中
有一些数据库名是保留的，可以直接访问这些有特殊作用的数据库。
admin:从权限的角度看，这是“root”数据库。要是将一个用户添加到这个数据库，这个用户自动继承所有数据库的权限。一些特定的服务器端命令也只能从这个数据库运行，比如列出所有的数据库或者关闭服务器。
local:这个数据库永远不会被复制，可以用来存储限于本地单台服务器的任意集合
config：当Mongo用于分片设置时，config数据库在内部使用，用于保存分片的相关信息


文档：
概念：文档时MongoDB中的最核心概念，是其核心单元，我们可以将文档类比成关系型数据库中的每一行数据，多个键及其关联的值有序的放置在一起就是文档。MongoDB使用了BSON这种结构来存储数据和网络数据交换。BSON数据可以理解为在JSON的基础上添加了一些json中没有的数据类型。
如果我们会JSON，那么BSON我们就已经掌握了一半。
例子：{name:"张三",age:20,hobby:["看书","旅游","唱歌"]}
注意：文档中的键/值对是有序的。文档中的值不仅可以是在引号里面的字符串，还可以是其他集中数据类型(甚至可以是整个嵌入的文档)
MongoDB区分类型和大小写，MongoDB中不能有重复的键，文档的键是字符串。除了少数例外情况，键可以使用任意UTF-8字符

集合：集合就是一组文档的组合。如果将文档类比成数据库中的行，那么集合就可以类比成数据库的表
在MongoDB中的集合是无模式的，也就是说集合中存储的文档的结构可以是不同的。
注意：当第一个文档插入时，集合就会被创建



